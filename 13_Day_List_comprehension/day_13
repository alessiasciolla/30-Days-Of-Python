negative_and_zero = [num for num in numbers if num <= 0]
print(negative_and_zero)  # Output: [-4, -3, -2, -1, 0]
list_of_lists = [[[1, 2, 3]], [[4, 5, 6]], [[7, 8, 9]]]
flattened_list = [elem for sublist1 in list_of_lists for sublist2 in sublist1 for elem in sublist2]
print(flattened_list)  # Output: [1, 2, 3, 4, 5, 6, 7, 8, 9]
tuples_list = [(i, 1, i, i**2, i**3, i**4, i**5) for i in range(11)]
print(tuples_list)
countries = [[('Finland', 'Helsinki')], [('Sweden', 'Stockholm')], [('Norway', 'Oslo')]]
reduced_countries = [[country.upper(), country[:3].upper(), city.upper()] for country, city in [item[0] for item in countries]]
print(reduced_countries)
names = [[('Asabeneh', 'Yetayeh')], [('David', 'Smith')], [('Donald', 'Trump')], [('Bill', 'Gates')]]
concatenated_names = [f"{first} {last}" for first, last in [item[0] for item in names]]
print(concatenated_names)
slope = lambda x1, y1, x2, y2: (y2 - y1) / (x2 - x1) if x2 != x1 else None
intercept = lambda m, x, y: y - m * x
linear_params = lambda x1, y1, x2, y2: (m := (y2 - y1) / (x2 - x1), y1 - m * x1) if x2 != x1 else (None, None)
